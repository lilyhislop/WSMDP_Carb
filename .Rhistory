getwd()
SampleInfo <- read.csv("/0 Grad School/0 Lab/Diversity Panel/Diversity Panel Spread Sheets/20142015PlantingInfo/Plot_line_spatial_2014.csv")
SampleInfo <- read.csv("0 Grad School/0 Lab/Diversity Panel/Diversity Panel Spread Sheets/20142015PlantingInfo/Plot_line_spatial_2014.csv")
SampleInfo
library(ggplot2)#for making pretty graph
head(SampleInfo)
ggplot(SampleInfo,aes(row,column,color=Line))+geom_point(size=4)+theme_classic()
ggplot(SampleInfo,aes(row,column,color=Line))+geom_point(size=4)+theme_classic()
ggplot(SampleInfo,aes(row,column,color=Line))+geom_point(size=4) + theme(legend. title = element_blank())
ggplot(SampleInfo,aes(row,column,color=Line))+geom_point(size=4) + theme(legend, title = element_blank())
p <- ggplot(SampleInfo,aes(row,column,color=Line))+geom_point(size=4)
p + theme(legend.position = "none")
p <- ggplot(SampleInfo,aes(row,column,color=superblock))+geom_point(size=4)
p + theme(legend.position = "none")
p <- ggplot(SampleInfo,aes(row,column,color=rep))+geom_point(size=4)
p + theme(legend.position = "none")
p <- ggplot(SampleInfo,aes(row,column,color=block))+geom_point(size=4)
p + theme(legend.position = "none")
p <- ggplot(SampleInfo,aes(row,column,color=superblock))+geom_point(size=4)
p + theme(legend.position = "none")
install.packages("wesanderson")
library(wesanderson)
p <- ggplot(SampleInfo,aes(row,column,color=superblock))+geom_point(size=4) +scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
p + theme(legend.position = "none")
p <- ggplot(SampleInfo,aes(row,column,color=superblock))+geom_point(size=4) +scale_color_manual(values=wes_palette(n=3, name="Royal1"))
p + theme(legend.position = "none")
p <- ggplot(SampleInfo,aes(row,column,color=superblock))+geom_point(size=4)
p + theme(legend.position = "none")
SampleInfo <- read.csv("0 Grad School/0 Lab/Diversity Panel/Diversity Panel Spread Sheets/20142015PlantingInfo/Plot_line_spatial_2014.csv")
p <- ggplot(SampleInfo,aes(row,column,color=superblock))+geom_point(aes(colour = factor(superblock), size=4)
)
p <- ggplot(SampleInfo,aes(row,column,color=superblock))+geom_point(aes(colour = factor(superblock)), size=4)
p + theme(legend.position = "none")
p <- ggplot(SampleInfo,aes(row,column))+geom_point(aes(colour = factor(superblock)), size=4)
p + theme(legend.position = "none")
p <- ggplot(SampleInfo,aes(row,column))+geom_point(aes(colour = factor(block)), size=4)
p + theme(legend.position = "none")
library(ggplot2)#for making pretty graph
install.packages("wesanderson")
library(wesanderson)
SampleInfo <- read.csv("0 Grad School/0 Lab/Diversity Panel/Diversity Panel Spread Sheets/20142015PlantingInfo/Plot_line_spatial_2014.csv")
p <- ggplot(SampleInfo,aes(row,column))+geom_point(aes(colour = factor(block)), size=4)
p + theme(legend.position = "none")
SampleInfo <- read.csv("0 Grad School/0 Lab/Diversity Panel/Diversity Panel Spread Sheets/20142015PlantingInfo/Plot_line_spatial_2014.csv")
p <- ggplot(SampleInfo,aes(row,column))+geom_point(aes(colour = factor(set)), size=4)
p + theme(legend.position = "none")
SampleInfo
p <- ggplot(SampleInfo,aes(row,column))+geom_point(aes(colour = factor(superblock)), size=4)
p + theme(legend.position = "none")
p + theme(legend.position = "none")+title("Colored by Superblock")
n
p <- ggplot(SampleInfo,aes(row,column))+geom_point(aes(colour = factor(superblock)), size=4)
p + theme(legend.position = "none")+title("Colored by Superblock")
p <- ggplot(SampleInfo,aes(row,column))+geom_point(aes(colour = factor(superblock)), size=4) +title("Colored by Superblock")
p <- ggplot(SampleInfo,aes(row,column))+geom_point(aes(colour = factor(superblock)), size=4) + ggtitle("Colored by Superblock")
p + theme(legend.position = "none")
p <- ggplot(SampleInfo,aes(row,column))+geom_point(aes(colour = factor(block)), size=4) + ggtitle("Colored by Incomplete Block")
p + theme(legend.position = "none")
CondensedInfo <- read.csv("0 Grad School/0 Lab/Diversity Panel/Diversity Panel Spread Sheets/20142015PlantingInfo/20142015_WSMDP_PlantingInfo_Condensation.csv")
MattWiInfo <- read.csv("0 Grad School/0 Lab/Diversity Panel/Diversity Panel Spread Sheets/20142015PlantingInfo/wisc_2014rep2.csv")
head(CondensedInfo)
head(MattWiInfo)
which(CondensedInfo$superblock == 1)
Group1Inbreds <- CondensedInfo$Inbreds[which(CondensedInfo$superblock == 1)]
Group1Inbreds <- CondensedInfo$Inbreds[which(CondensedInfo$superblock == 1),]
Group1Inbreds <- CondensedInfo$Inbreds[,which(CondensedInfo$superblock == 1)]
Group1Inbreds
which(CondensedInfo$superblock == 1)
CondensedInfo$Inbreds[which(CondensedInfo$superblock == 1)]
CondensedInfo$Inbreds
Group1Inbreds <- CondensedInfo$Inbred[which(CondensedInfo$superblock == 1)]
Group1Inbreds <- CondensedInfo$Inbred[which(CondensedInfo$superblock == 2)]
Group1Inbreds <- CondensedInfo$Inbred[which(CondensedInfo$superblock == 1)]
Group2Inbreds <- CondensedInfo$Inbred[which(CondensedInfo$superblock == 2)]
Group3Inbreds <- CondensedInfo$Inbred[which(CondensedInfo$superblock == 3)]
Group1Inbreds <- unique(CondensedInfo$Inbred[which(CondensedInfo$superblock == 1)])
Group2Inbreds <- unique(CondensedInfo$Inbred[which(CondensedInfo$superblock == 2)])
Group3Inbreds <- unique(CondensedInfo$Inbred[which(CondensedInfo$superblock == 3)])
head(MattWiInfo)
NYGp1Inbreds <- unique(CondensedInfo$Inbred[which(CondensedInfo$superblock == 1)])
NYGp2Inbreds <- unique(CondensedInfo$Inbred[which(CondensedInfo$superblock == 2)])
NYGp3Inbreds <- unique(CondensedInfo$Inbred[which(CondensedInfo$superblock == 3)])
MatGp1Inbreds <- unique(MattWiInfo$pedigree[which(MattWiInfo$super == 1)])
MatGp2Inbreds <- unique(MattWiInfo$pedigree[which(MattWiInfo$super == 2)])
MatGp3Inbreds <- unique(MattWiInfo$pedigree[which(MattWiInfo$super == 3)])
?union
setequal(NYGp1Inbreds, MatGp1Inbreds)
setdiff(NYGp1Inbreds, MatGp1Inbreds)
setdiff(MatGp1Inbreds,NYGp1Inbreds)
?distinct
Sup1Dif <- setdiff(MatGp1Inbreds,NYGp1Inbreds)
Sup2Dif <- setdiff(MatGp2Inbreds,NYGp2Inbreds)
Sup3Dif <- setdiff(MatGp2Inbreds,NYGp2Inbreds)
Sup2Dif
Sup3Dif
Sup1Dif <- setdiff(MatGp1Inbreds,NYGp1Inbreds)
Sup2Dif <- setdiff(MatGp2Inbreds,NYGp2Inbreds)
Sup3Dif <- setdiff(MatGp3Inbreds,NYGp3Inbreds)
Sup1Dif
Sup2Dif
Sup3Dif
which(CondensedInfo$Inbred == Sup1Dif)
which(CondensedInfo$Inbred == Sup1Dif[1])
CondensedInfo$Inbred[Sup1Dif]
CondensedInfo$Inbred[,Sup1Dif]
Sup1Dif
CondensedInfo[which(CondensedInfo$Inbred==Sup1Dif[1])]
CondensedInfo[,which(CondensedInfo$Inbred==Sup1Dif[1])]
which(CondensedInfo$Inbred==Sup1Dif[1])
CondensedInfo[which(CondensedInfo$Inbred==Sup1Dif[1]),]
CondensedInfo[which(CondensedInfo$Inbred==Sup1Dif[2]),]
CondensedInfo[which(CondensedInfo$Inbred==Sup1Dif[3]),]
CondensedInfo[which(CondensedInfo$Inbred==Sup1Dif[4]),]
getwd()
setwd("C:/Users/LHislop/Documents/GitHub/WSMDP_Carb")
#Read in packages made for these codesets
source("R/CarbEquationComparison.R")
source("R/PredictionCulling.R")
source("R/MixedEndoEqnValidation.R")
source("R/AgPredOutput.R")
source("R/CarbOutlierCleanup.R")
source("R/CarbDataFrameVis.R")
source("R/GWASPolyVis.R")
source("R/GWASPolyRunner.R")
source("R/WritePhenoGenotoFile.R")
source("R/hmpToNumeric.R")
#########################
###Read in sample data###
#########################
#Read in the sample information.
#this file contains information about the superblock, row, column data for each sample
BookInfo <- read.csv("Data/20142015_WSMDP_PlantingInfo_Condensation.csv")
#There are some duplicates in planting info condensation. Remove duplicates
BookInfo <- BookInfo[!duplicated(BookInfo$SampleLabel),]
length(unique(BookInfo$Inbred))
#this file containes the year, location,variety and endosperm of every sample
SampleInfo <- read.csv("Data/WSMDP_2014-2015_WINY_SampleInfo.csv")
#Fix the sample numbers that are labeled in the NY style e.g " 14A0255" or "15A0005" and change to just the row numbers
SampleInfo$Row <- SampleInfo$Sample.Number
SampleInfo$Row[which(nchar(SampleInfo$Row)>6)] <- substr(SampleInfo$Row[which(nchar(SampleInfo$Row)>6)],4,15)
tail(SampleInfo)
#Generate NIR Code. NIR codes are all YearLocationRow - Rep
SampleInfo$NIRBase <- paste(substr(SampleInfo$year,3,4), ifelse(SampleInfo$location == "Wisconsin", "W","NY"), SampleInfo$Row,sep = "")
tail(SampleInfo)
str(unique(SampleInfo$Variety))
summary.factor(SampleInfo$endo)
length(unique(SampleInfo$Variety))
