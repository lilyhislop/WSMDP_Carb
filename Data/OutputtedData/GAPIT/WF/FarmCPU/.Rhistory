str(geno_scmv)
#########################
### GWASPoly Function ###
#########################
#trait to analyze
trait <- "SusceptibilityRating02"
GWASPolyRunner("FullGroup_420lines_PC3_Functioned", trait, geno_scmv,filename,adendum,phenoSubsetGeno)
GWASPolyRunner("FullGroup_420lines_PC3_Functioned", "SusceptibilityRating03", geno_scmv,filename,adendum,phenoSubsetGeno)
GWASPolyRunner("FullGroup_420lines_PC3_Functioned", "SusceptibilityRating05", geno_scmv,filename,adendum,phenoSubsetGeno)
GWASPolyRunner("FullGroup_420lines_PC3_Functioned", "PercentInfectedAllRounds", geno_scmv,filename,adendum,phenoSubsetGeno)
#############
#data visualization
#############
pheno$PotLabel <- as.factor(pheno[,1])
pheno$StandCountCleaned <- as.numeric(pheno$StandCountCleaned)
pheno$SusceptibilityRating02 <- as.factor(pheno$SusceptibilityRating02)
pheno$SusceptibilityRating03 <- as.factor(pheno$SusceptibilityRating03)
pheno$SusceptibilityRating05 <- as.factor(pheno$SusceptibilityRating05)
summary(pheno)
summary(pheno$PercentInfectedAllRounds)
dfSummary(pheno)
freq(pheno)
descr(pheno)#descr shows that plant height has outlier with kurtosis
ctable(pheno)
plotData <- function(ToPlot, type, ByPlot=NULL){
png(paste("Figures/Plot_Pheno_",ToPlot,"_",type,".png",sep=""))
if(type == "hist"){
pheno[,ToPlot]<-as.numeric(pheno[,ToPlot])
hist(pheno[,ToPlot], main = paste(ToPlot,"Freq"), xlab = ToPlot)
}
if(type == "plot"){plot(pheno[,ToPlot]~pheno[,ByPlot], main = paste(ToPlot,"by",ByPlot))}
dev.off()
}
plotData("PercentInfectedAllRounds","hist")
plotData("SusceptibilityRating05","hist")
plotData("SusceptibilityRating03","hist")
plotData("SusceptibilityRating02","hist")
png("Figures/Plot_Susceptible.png")
barplot(prop.table(table(pheno$Susceptible)), xlab = "Susceptibility Scores",ylab = "Frequency of Occurance",ylim = c(0,1), main = "Susceptibility Scores within Panel")
dev.off()
png("Figures/Plot_Suscep_by_Pot.png")
plot(x =  pheno$PotLabel, y = pheno$Susceptible, main = "Susceptibility by Pot label")
dev.off()
png("Figures/Plot_StandCount_Hist.png")
hist(pheno$StandCountCleaned, main = "Stand Count Freq", xlab = "Stand Count")
dev.off()
png("Figures/Plot_Suscep_by_Region.png")
plot(pheno$Susceptible ~ pheno$Region, main = "Susceptibility by Region of Origin")
dev.off()
png("Figures/Plot_Suscep_by_Program.png")
plot(pheno$Susceptible ~ pheno$Program, main = "Susceptibility by Program of Origin")
dev.off()
png("Figures/Plot_Suscep_by_Endo.png")
plot(pheno$Susceptible ~ pheno$EndospermType, main = "Susceptibility by Endosperm Type")
dev.off()
png("Figures/Plot_Endo.png")
plot(pheno$EndospermType,ylab = "Count", main = "Representation of Endosperm Types in Panel")
dev.off()
png("Figures/Plot_Suscp_by_Date.png")
plot(pheno$Susceptible ~ pheno$DatePlanted, main = "Susceptibility by Planting Date")
dev.off()
#how many are resistant?
length(which(pheno$Susceptible == 0)) #47 not susceptible, or 47 resistant
resistantvar <- pheno$Line[which(pheno$Susceptible == 0 )]
print(resistantvar)
write.table(resistantvar, "resistant_varieties.txt", append = FALSE, sep = ",", dec = ".",
row.names = FALSE, col.names = TRUE)
pheno$EndospermType[which(pheno$Susceptible == 0 )]
resistantendo <- table(pheno$EndospermType[which(pheno$Susceptible == 0)])
print(resistantendo)
write.table(resistantendo,"resistant_endosperm_types.txt", append = FALSE, sep = ",", dec = ".",
row.names = FALSE, col.names = TRUE)
endocount <- table(pheno$EndospermType)
print(endocount)
write.table(endocount,"total_endosperm_types.txt", append = FALSE, sep = ",", dec = ".",
row.names = FALSE, col.names = TRUE)
# #########################
# ### GWASPoly, Full Group, No removes ###
# #########################
# #Start with the full group, nothing removed
# GWASPolyRunVersion <- "FullGroup_420lines_PC3"
#
# #read in hmp data, output numeric format that GWASPoly likes
# SCMVPanel_nwithpos <- hmpToNumeric(geno_scmv)
# outfiles <- WritePhenoGenoToFile(GWASPolyRunVersion,trait,phenoSubsetGeno,SCMVPanel_nwithpos,filename,adendum)
#
# #now we run the GWASpoly with the files in the proper format
# data <- read.GWASpoly(ploidy=2,
#                       pheno.file = outfiles[1],
#                       geno.file=outfiles[2],
#                       format="numeric",
#                       n.traits=1,
#                       delim=",")
#
# data2 <- set.K(data)
# params <- set.params(fixed=NULL, fixed.type=NULL,n.PC = 3, MAF = 0.025) #no fixed effects, MAF should do nothing as it's already been filtered
#
# data3 <- GWASpoly(data2,models=c("additive","general","1-dom-alt","1-dom-ref"),traits=trait, params=params)
#
# #visualize the gwas results
# GWASPolyVis(GWASPolyRunVersion, trait, data3)
#
# #########################
# ### GWASPoly, Full Group, Remove Bad Stands ###
# #########################
# # GWASPolyRunVersion <- "BadStandsRemoved_420lines_PC3"
# #
# # #subset the pheno data
# # phenoSubsetGeno_removes <- phenoSubsetGeno[!phenoSubsetGeno$Remove == "Remove",]
# #
# # #remove the things that are labeled "Remove"
# # toRemove <- as.character(phenoSubsetGeno$GenoName[phenoSubsetGeno$Remove == "Remove"])
# # intersect(colnames(geno_scmv), toRemove)
# # geno_scmv_removes = dplyr::select(geno_scmv, -toRemove)
# # dim(geno_scmv)
# # dim(geno_scmv_removes)
# #
# #
# # #read in hmp data, output numeric format that GWASPoly likes
# # SCMVPanel_nwithpos <- hmpToNumeric(geno_scmv_removes)
# #
# # outfiles <- WritePhenoGenoToFile(GWASPolyRunVersion,trait,phenoSubsetGeno_removes,SCMVPanel_nwithpos,filename,adendum)
# #
# #
# # #now we run the GWASpoly with the files in the proper format
# # data <- read.GWASpoly(ploidy=2,
# #                       pheno.file = outfiles[1],
# #                       geno.file=outfiles[2],
# #                       format="numeric",
# #                       n.traits=1,
# #                       delim=",")
# #
# # data2 <- set.K(data)
# # params <- set.params(fixed=NULL, fixed.type=NULL,n.PC = 3, MAF = 0.025)
# #
# #
# # data3 <- GWASpoly(data2,models=c("additive","general","1-dom-alt","1-dom-ref","diplo-general"),traits="Susceptible", params=params)
# #
# # #visualize the gwas results
# # GWASPolyVis(GWASPolyRunVersion, trait, data3)
#
# #########################
# ### GWASPoly, Full Group, Remove Bad Stands, 2&3 compressed, 1 removed###
# #########################
# GWASPolyRunVersion <- "BadStandsRemoved_Binary01_420lines_PC3"
#
# #make the necessary phenotype/genotype files, required by the GWASPoly manual
# phenoAlpha_ss_removes <- phenoAlpha_ss[!phenoAlpha_ss$Remove == "Remove",]
# phenoAlpha_ss_removes_023 <- phenoAlpha_ss[!phenoAlpha_ss_removes$Susceptible == "1",]
#
# #make all the susceptibility scores that are equal to 2 or 3 into 1s
# #this will make the measurement binary. That which is susceptible (1) and that which is resistant (0)
# phenoAlpha_ss_removes_023$Susceptible[which(phenoAlpha_ss_removes_023$Susceptible == "2")] = 3
# phenoAlpha_ss_removes_023$Susceptible[which(phenoAlpha_ss_removes_023$Susceptible == "3")] = 1
#
# phenoAlpha_ss_removes_01 <- phenoAlpha_ss_removes_023
# phenoAlpha_ss_removes_01_fullpheno <- phenoAlpha_ss_removes_01[,c('GenoName','Susceptible', "EndospermType", "Region", "Program")]
# phenoAlpha_ss_removes_01_trait_Only <- phenoAlpha_ss_removes_01[,c('GenoName',trait)]
#
# #read out the phenotype info into a format that GWASpoly will like
# phenooutfilefull <- paste("Data/SCMV_Panel_GWASpoly_Pheno_",GWASPolyRunVersion ,".csv",sep = "")
# write.table(phenoAlpha_ss_removes_01_fullpheno,
#             append = FALSE,
#             file = phenooutfilefull,
#             sep = ",",
#             dec = ".",
#             row.names = FALSE,
#             col.names = TRUE)
#
# #read out the phenotype info into a format that GWASpoly will like. This time with only susceptibility info incase the other info is confusing
# phenooutfiletrait <- paste("Data/SCMV_Panel_GWASpoly_Pheno_only_",trait,"_",GWASPolyRunVersion ,".csv",sep = "")
# write.table(phenoAlpha_ss_removes_01_trait_Only,
#             append = FALSE,
#             file = phenooutfiletrait,
#             sep = ",",
#             dec = ".",
#             row.names = FALSE,
#             col.names = TRUE)
#
#
# #remove the things that are labeled "Remove"
# toRemove <- c(as.character(phenoAlpha_ss$GenoName[phenoAlpha_ss$Remove == "Remove"]),
#               as.character(phenoAlpha_ss$GenoName[phenoAlpha_ss$Susceptible == "1"]))
# geno_scmv_removes <- dplyr::select(geno_scmv, -c(toRemove))
# str(geno_scmv_removes)
#
# #read in hmp data, output numeric format that GWASPoly likes
# SCMVPanel_nwithpos <- hmpToNumeric(geno_scmv_removes)
#
# #export as CSV
# genooutput <- paste("Data/SequenceData/",filename,adendum,"_",GWASPolyRunVersion,"_numericFormat.csv",sep = "")
# write.table(SCMVPanel_nwithpos,
#             append = FALSE,
#             file = genooutput,
#             sep = ",",
#             dec = ".",
#             row.names = FALSE,
#             col.names = TRUE)
#
#
# #now we run the GWASpoly with the files in the proper format
# data <- read.GWASpoly(ploidy=2,
#                       pheno.file = phenooutfilefull,
#                       geno.file=genooutput,
#                       format="numeric",
#                       n.traits=1,
#                       delim=",")
#
# data2 <- set.K(data)
# # params <- set.params(fixed=NULL, fixed.type=NULL)
# params <- set.params(fixed=NULL, fixed.type=NULL,n.PC = 3, MAF = 0.025)
#
# #fixed = defines the covariates in the pheno file (by column name)
# # fixed.type = numeric (covariates) or factor
# # in this case, we have none
#
# data3 <- GWASpoly(data2,models=c("additive","general","1-dom-alt","1-dom-ref"),traits="Susceptible", params=params)
#
# #visualize the gwas results
# GWASPolyVis(GWASPolyRunVersion, trait, data3)
#
# #########################
# ### GWASPoly, Full Group, Remove Bad Stands,SCMV1 as fixed effect ###
# #########################
# GWASPolyRunVersion <- "BadStandsRemoved_420lines_PC3_SCMV1Fixed"
#
# phenoAlpha_ss_removes <- phenoAlpha_ss[!phenoAlpha_ss$Remove == "Remove",]
# phenoAlpha_ss_removes_fullpheno <- phenoAlpha_ss_removes[,c('GenoName','Susceptible', "EndospermType", "Region", "Program")]
# phenoAlpha_ss_removes_trait_Only <- phenoAlpha_ss_removes[,c('GenoName',trait)]
#
# #remove the things that are labeled "Remove"
# toRemove <- as.character(phenoAlpha_ss$GenoName[phenoAlpha_ss$Remove == "Remove"])
# intersect(colnames(geno_scmv), toRemove)
# geno_scmv_removes = dplyr::select(geno_scmv, -toRemove)
# dim(geno_scmv)
# dim(geno_scmv_removes)
#
# #read in hmp data, output numeric format that GWASPoly likes
# SCMVPanel_nwithpos <- hmpToNumeric(geno_scmv_removes)
#
# #figure out what the haplotype is at the SCMV1 gene in IL793a (it has Pa405 as parent)
# SCMVPanel_nwithpos_chr6 <- SCMVPanel_nwithpos[SCMVPanel_nwithpos$Chrom == "6"]
# #know the PAV for SCMV1 is around 19.4Mb. Find the closest postion to that
# SCMV1Pos <- as.integer(which(SCMVPanel_nwithpos_chr6$Position == 19369936))
# IL793apos <- as.integer(which(colnames(SCMVPanel_nwithpos_chr6) == "IL793a"))
# SCMV1status <- SCMVPanel_nwithpos_chr6[60,183]
#
# withSCMV1pos <- which(SCMVPanel_nwithpos_chr6[60,] == as.integer(SCMV1status))
# withSCMV1names <- colnames(SCMVPanel_nwithpos_chr6)[withSCMV1pos]
#
# phenoAlpha_ss_removes_fullpheno$SCMV1 = FALSE
# phenoAlpha_ss_removes_trait_Only$SCMV1 = FALSE
# phenoAlpha_ss_removes_fullpheno$SCMV1[phenoAlpha_ss_removes_fullpheno$GenoName %in% c(withSCMV1names)]=TRUE
# phenoAlpha_ss_removes_trait_Only$SCMV1[phenoAlpha_ss_removes_trait_Only$GenoName %in% c(withSCMV1names)]=TRUE
#
# #read out the phenotype info into a format that GWASpoly will like
# phenooutfilefull <- paste("Data/SCMV_Panel_GWASpoly_Pheno_",GWASPolyRunVersion ,".csv",sep = "")
# write.table(phenoAlpha_ss_removes_fullpheno,
#             append = FALSE,
#             file = phenooutfilefull,
#             sep = ",",
#             dec = ".",
#             row.names = FALSE,
#             col.names = TRUE)
#
# #read out the phenotype info into a format that GWASpoly will like. This time with only susceptibility info incase the other info is confusing
# phenooutfiletrait <- paste("Data/SCMV_Panel_GWASpoly_Pheno_only_",trait,"_",GWASPolyRunVersion ,".csv",sep = "")
# write.table(phenoAlpha_ss_removes_trait_Only,
#             append = FALSE,
#             file = phenooutfiletrait,
#             sep = ",",
#             dec = ".",
#             row.names = FALSE,
#             col.names = TRUE)
#
#
# #export as CSV
# genooutput <- paste("Data/SequenceData/",filename,adendum,"_",GWASPolyRunVersion,"_numericFormat.csv",sep = "")
# write.table(SCMVPanel_nwithpos,
#             append = FALSE,
#             file = genooutput,
#             sep = ",",
#             dec = ".",
#             row.names = FALSE,
#             col.names = TRUE)
#
#
# #now we run the GWASpoly with the files in the proper format
# data <- read.GWASpoly(ploidy=2,
#                       pheno.file = phenooutfilefull,
#                       geno.file=genooutput,
#                       format="numeric",
#                       n.traits=1,
#                       delim=",")
#
# data2 <- set.K(data)
#
# #set presence of SCMV1 as a fixed effect
# para <- set.params(fixed=c("SCMV1"), fixed.type=c("factor"),n.PC = 3, MAF = 0.025)
# data3 <- GWASpoly(data2,models=c("additive","general","1-dom-alt","1-dom-ref"),traits=c("Susceptible"), params=para)
#
# #visualize the gwas results
# GWASPolyVis(GWASPolyRunVersion, trait, data3)
# #########################
# ### GWASPoly, Only those with Scmv1, Remove Bad Stands,SCMV1 as fixed effect ###
# #########################
# GWASPolyRunVersion <- "BadStandsSCMV1Removed_420lines_PC3"
#
# phenoAlpha_ss_removes <- phenoAlpha_ss[!phenoAlpha_ss$Remove == "Remove",]
# phenoAlpha_ss_removes_fullpheno <- phenoAlpha_ss_removes[,c('GenoName','Susceptible', "EndospermType", "Region", "Program")]
# phenoAlpha_ss_removes_trait_Only <- phenoAlpha_ss_removes[,c('GenoName',trait)]
#
# #remove the things that are labeled "Remove"
# toRemove <- as.character(phenoAlpha_ss$GenoName[phenoAlpha_ss$Remove == "Remove"])
# intersect(colnames(geno_scmv), toRemove)
# geno_scmv_removes = dplyr::select(geno_scmv, -toRemove)
# dim(geno_scmv)
# dim(geno_scmv_removes)
#
# #read in hmp data, output numeric format that GWASPoly likes
# SCMVPanel_nwithpos <- hmpToNumeric(geno_scmv_removes)
#
# #figure out what the haplotype is at the SCMV1 gene in IL793a (it has Pa405 as parent)
# SCMVPanel_nwithpos_chr6 <- SCMVPanel_nwithpos[SCMVPanel_nwithpos$Chrom == "6"]
# #know the PAV for SCMV1 is around 19.4Mb. Find the closest postion to that
# SCMV1Pos <- as.integer(which(SCMVPanel_nwithpos_chr6$Position == 19369936))
# IL793apos <- as.integer(which(colnames(SCMVPanel_nwithpos_chr6) == "IL793a"))
# SCMV1status <- SCMVPanel_nwithpos_chr6[60,183]
#
# withSCMV1pos <- which(SCMVPanel_nwithpos_chr6[60,] == as.integer(SCMV1status))
# withSCMV1names <- colnames(SCMVPanel_nwithpos_chr6)[withSCMV1pos]
#
# phenoAlpha_ss_removes_fullpheno$SCMV1 = FALSE
# phenoAlpha_ss_removes_trait_Only$SCMV1 = FALSE
# phenoAlpha_ss_removes_fullpheno$SCMV1[phenoAlpha_ss_removes_fullpheno$GenoName %in% c(withSCMV1names)]=TRUE
# phenoAlpha_ss_removes_trait_Only$SCMV1[phenoAlpha_ss_removes_trait_Only$GenoName %in% c(withSCMV1names)]=TRUE
#
# #remove all those without SCMV1
# #remove the things that are labeled "Remove"
# toRemove <- as.character(phenoAlpha_ss$GenoName[!phenoAlpha_ss_removes_fullpheno$SCMV1])
# intersect(colnames(geno_scmv), toRemove)
# geno_scmv_removes = dplyr::select(geno_scmv, -toRemove)
# dim(geno_scmv)
# dim(geno_scmv_removes)
#
#
# #read in hmp data, output numeric format that GWASPoly likes
# SCMVPanel_nwithpos <- hmpToNumeric(geno_scmv_removes)
#
# #read out the phenotype info into a format that GWASpoly will like
# phenooutfilefull <- paste("Data/SCMV_Panel_GWASpoly_Pheno_",GWASPolyRunVersion ,".csv",sep = "")
# write.table(phenoAlpha_ss_removes_fullpheno,
#             append = FALSE,
#             file = phenooutfilefull,
#             sep = ",",
#             dec = ".",
#             row.names = FALSE,
#             col.names = TRUE)
#
# #read out the phenotype info into a format that GWASpoly will like. This time with only susceptibility info incase the other info is confusing
# phenooutfiletrait <- paste("Data/SCMV_Panel_GWASpoly_Pheno_only_",trait,"_",GWASPolyRunVersion ,".csv",sep = "")
# write.table(phenoAlpha_ss_removes_trait_Only,
#             append = FALSE,
#             file = phenooutfiletrait,
#             sep = ",",
#             dec = ".",
#             row.names = FALSE,
#             col.names = TRUE)
#
#
# #export as CSV
# genooutput <- paste("Data/SequenceData/",filename,adendum,"_",GWASPolyRunVersion,"_numericFormat.csv",sep = "")
# write.table(SCMVPanel_nwithpos,
#             append = FALSE,
#             file = genooutput,
#             sep = ",",
#             dec = ".",
#             row.names = FALSE,
#             col.names = TRUE)
#
#
# #now we run the GWASpoly with the files in the proper format
# data <- read.GWASpoly(ploidy=2,
#                       pheno.file = phenooutfilefull,
#                       geno.file=genooutput,
#                       format="numeric",
#                       n.traits=1,
#                       delim=",")
#
# data2 <- set.K(data)
#
# #set presence of SCMV1 as a fixed effect
# para <-  set.params(fixed=NULL, fixed.type=NULL,n.PC = 3, MAF = 0.025)
# data3 <- GWASpoly(data2,models=c("additive","general","1-dom-alt","1-dom-ref"),traits=c("Susceptible"), params=para)
#
# #visualize the gwas results
# GWASPolyVis(GWASPolyRunVersion, trait, data3)
#
#########################
### rrBlup version ###
#########################
GWAS(pheno = phenoAlpha_ss_removes_trait_Only,
geno=SCMVPanel_nwithpos,
K = NULL,
n.PC = 3,
min.MAF = 0.025)
# #########################
# ### Linear Model ###
# #########################
#
# phenoAlpha_ss_removes$SCMV1 <- phenoAlpha_ss_removes_fullpheno$SCMV1
#
# formula <- "Susceptible~SCMV1+DatePlanted+Program+StandCountCleaned"
# fit1 <- lm(formula,data=phenoAlpha_ss_removes)
# AIC1 <- extractAIC(fit1)
# AIC1
# summary(fit1)$r.square
# anova(fit1)
#
# formula2 <- "Susceptible~SCMV1+DatePlanted+Program+BadStand+StandCountCleaned"
# fit2 <- lm(formula2,data=phenoAlpha_ss_removes)
# AIC2 <- extractAIC(fit2)
# AIC2
# summary(fit2)$r.square
# anova(fit2)
#
# formula3 <- "Susceptible~SCMV1+DatePlanted+Program+EndospermType+BadStand+StandCountCleaned"
# fit3 <- lm(formula3,data=phenoAlpha_ss_removes)
# AIC3 <- extractAIC(fit3)
# AIC3
# summary(fit3)$r.square
# anova(fit3)
#
# formula4 <- "Susceptible~SCMV1+DatePlanted+Program"
# fit4 <- lm(formula4,data=phenoAlpha_ss_removes)
# AIC4 <- extractAIC(fit4)
# AIC4
# summary(fit4)$r.square
# anova(fit4)
#
# formula5 <- "Susceptible~SCMV1+DatePlanted+Program+BadStand"
# fit5 <- lm(formula5,data=phenoAlpha_ss_removes)
# AIC5 <- extractAIC(fit5)
# AIC5
# summary(fit5)$r.square
# anova(fit5)
#
#
# #what if we got rid of the late planting
# formula6 <- "Susceptible~SCMV1+DatePlanted+Program"
# fit6 <- lm(formula6,data=phenoAlpha_ss_removes[which(phenoAlpha_ss_removes$DatePlanted != "5/22/2019"),])
# AIC6 <- extractAIC(fit4)
# AIC6
# summary(fit6)$r.square
# anova(fit4)
#
# formula7 <- "Susceptible~Program + Line"
# fit7 <- lm(formula7,data=phenoAlpha_ss_removes)
# AIC7 <- extractAIC(fit7)
# AIC7
# summary(fit7)$r.square
# anova(fit7)
#
#########################
### LD Visualization ###
#########################
#this is a funtion to calculate what proportion of the compared snps at a given distance apart are in what LD
get.percentiles=function(x, probs=0.95, log_transform=log_transform, numbins=numbins, removefirst500 = removefirst500){
# 	cat("Numbins is",numbins,"and range of distances is",range(x$dist),"\n")
mydists = x$dist
if(removefirst500 == TRUE){
x <- x[-which(mydists < 501),]
mydists <- mydists[-which(mydists < 501)]}
if(log_transform == TRUE){
is_negative = mydists<0 & !is.na(mydists)
mydists = abs(mydists)	# Have to abs-value b/c log doesn"t do negatives
print(range(mydists))
mydists[mydists==0]=1 # To avoid problems with log-transforming 0-values
mydists = log10(mydists)
mydists[is_negative] = mydists[is_negative] * -1	# Restore to negative to indicate is before the gene
}
results=as.list(tapply(X=x$rsq, INDEX=cut(mydists, breaks=numbins), FUN=quantile, na.rm=T, probs=probs))
results=do.call(what=rbind, args=results)
return(results)
}
#this is a funtion to calculate what's the median LD the compared SNPS
get.median=function(x, probs=5, log_transform=log_transform, numbins=numbins, removefirst500 = removefirst500){
mydists = x$dist
if(removefirst500 == TRUE){
x <- x[-which(mydists < 501),]
mydists <- mydists[-which(mydists < 501)]}
if(log_transform == TRUE){
is_negative = mydists<0 & !is.na(mydists)
mydists = abs(mydists)	# Have to abs-value b/c log doesn"t do negatives
print(range(mydists))
mydists[mydists==0]=1 # To avoid problems with log-transforming 0-values
mydists = log10(mydists)
mydists[is_negative] <- mydists[is_negative] * -1	# Restore to negative to indicate is before the gene
}
results=as.list(tapply(X=x$rsq, INDEX=cut(mydists, breaks=numbins), FUN=median, na.rm=T))
results=do.call(what=rbind, args=results)
return(results)
}
#Import the name of the file. This matrix was calculated on Tassel using the Linkage Disequilibrium tool and the output was saved as a text file
#since the resulting text file was 8GB, it was pruned using AWK on linux to only include the columns for distance and r2
# LDMatrixfileName <- "WiDivMerged+all_sweet_v120160307_rawcalls_min526_maf0025_maxhet001_mincall040_LD_FullMatrix_r2_distonly"
LDMatrixfileName <- "WiDivMerged+all_sweet_v120160307_rawcalls_min526_maf0025_LD_FullMatrix_locidistr2only"
fullpath <- paste("Data/",LDMatrixfileName,".txt",sep = "")
#Read in the .txt LD matric file
readin <- fread(fullpath, sep=' ')
#establish the working directory
setwd("C:/Users/CaptainsScreen/Documents/0 Grad School/0 Lab/Diversity Panel/SCMV")
